{
    "contents" : "server <- function(input, output) {    \n    \n    output$Main <- renderUI({\n        dynamicUi()\n    })\n    \n    dynamicUi <- reactive({\n        \n        #first page, ask for demographics, etc\n        if(input$Next == 0L){\n            return(MCE$shinyGUI$firstpage)\n        }\n        \n        if(input$Next == 1L){\n            return(MCE$shinyGUI$demographics)\n        }\n        \n        #store demographic results\n        if(input$Next == 2L){\n            tmp <- list()\n            for(tag in MCE$shinyGUI$demographic_inputIDs)\n                tmp[[length(tmp) + 1L]] <- input[[tag]]\n            names(tmp) <- MCE$shinyGUI$demographic_inputIDs\n            MCE$person$field(\"demographics\", as.data.frame(tmp))\n            return(list(h5(\"Click \\'Next\\' to start the survey.\")))\n        }\n        \n        if(input$Next == 3L) MCE$start_time <- proc.time()[3L]\n        \n        itemclick <- input$Next - 3L\n        \n        # run survey\n        if(input$Next > 2L && !MCE$design$stop_now){\n            if(itemclick >= 1L){\n                pick <- MCE$person$items_answered[itemclick]\n                name <- MCE$test$itemnames[pick]\n                ip <- input[[name]]\n                MCE$person$raw_responses[pick] <- MCE$person$responses[pick] <- \n                    which(MCE$test$item_options[[pick]] %in% ip) - 1L\n                if(!is.na(MCE$test$item_answers[[pick]]) && \n                       MCE$test$item_class[pick] != 'nestlogit')\n                    MCE$person$responses[pick] <- as.integer(ip == MCE$test$item_answers[[pick]])\n                \n                MCE$person$item_time[pick] <- proc.time()[3L] - MCE$start_time - \n                    max(MCE$person$item_time)\n                \n                #update Thetas\n                MCE$person$Update.thetas()\n                if(itemclick > MCE$design$preCAT_nitems)\n                    MCE$design$Update.stop_now()\n            } \n            \n            MCE$design$Next.stage(item=itemclick)\n            \n            if(!MCE$design$stop_now){\n                item <- findNextCATItem(person=MCE$person, test=MCE$test, \n                                        lastitem=itemclick, criteria=MCE$design$criteria)\n                MCE$person$items_answered[itemclick+1L] <- item\n                return(MCE$shinyGUI$questions[[item]])\n            }\n        }\n        \n        #last page\n        if(!MCE$STOP){\n            MCE$STOP <- TRUE\n            return(MCE$shinyGUI$lastpage)\n        } else {\n            stopApp()\n            return(NULL)\n        }\n        \n    }) \n        \n    output$item_stem <- renderImage({\n            \n        if(!MCE$STOP){\n            if(input$Next > 2L && (input$Next-2L) < MCE$test$length){\n                empty <- is.na(MCE$shinyGUI$stem_locations[[\n                    MCE$person$items_answered[[input$Next-2L]]]])\n            } else empty <- TRUE\n        } else empty <- TRUE\n        \n        if(empty){\n            outfile <- MCE$outfile\n            png(outfile, width=1, height=1)\n            dev.off()\n            return(list(src = outfile,\n                        contentType = 'image/png',\n                        width = 1,\n                        height = 1,\n                        alt = \"\"))\n        } else {\n            return(list(src = MCE$shinyGUI$stem_locations[[input$Next-2L]]))\n        }\n        \n    }, deleteFile = FALSE)\n    \n}",
    "created" : 1406070871077.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1057993700",
    "id" : "9703EC6B",
    "lastKnownWriteTime" : 1407967707,
    "path" : "~/Desktop/Dropbox/Research-projects/mirtCAT/R/server.R",
    "project_path" : "R/server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}