{
    "contents" : "Design <- setRefClass(\"Design\", \n                    \n                    fields = list(method = 'character',\n                                  criteria = 'character',\n                                  criteria_estimator = 'character',\n                                  min_SEM = 'numeric',\n                                  met_SEM = 'logical',\n                                  min_items = 'integer',\n                                  max_items = 'integer',\n                                  stop_now = 'logical',\n                                  exposure = 'integer',\n                                  Wrule_weights = 'numeric',\n                                  KL_delta = 'numeric',\n                                  start_item = 'integer',\n                                  preCAT_nitems = 'integer',\n                                  preCAT_criteria = 'character',\n                                  preCAT_method = 'character',\n                                  CAT_criteria = 'character',\n                                  CAT_method = 'character',\n                                  max_time = 'numeric'),\n                    \n                    methods = list(\n                        initialize = function(method, criteria, nfact, design,\n                                              start_item, preCAT, nitems, exposure){\n                            method <<- method\n                            criteria <<- criteria\n                            criteria_estimator <<- 'MAP'\n                            if(criteria %in% c('Drule', 'Trule', 'Erule', 'Wrule')){\n                                criteria_estimator <<- 'ML'\n                            } else if(criteria %in% c('DPrule', 'TPrule', 'EPrule', 'WPrule',\n                                                      'MEPV')){\n                                criteria_estimator <<- 'MAP'\n                            }\n                            CAT_criteria <<- criteria\n                            CAT_method <<- method\n                            start_item <<- as.integer(start_item)\n                            if(!length(exposure) == nitems)\n                                stop('exposure input is not the correct length')\n                            pick <- exposure > nitems:1L\n                            tmp <- exposure\n                            tmp[pick] <- (nitems:1L)[pick]\n                            exposure <<- as.integer(tmp)\n                            if(start_item != 1 && criteria == 'seq')\n                                stop('start_item must equal 1 with seq criteria')\n                            if(nfact > 1L && \n                                   !any(criteria %in% c('Drule', 'Trule', 'Wrule', 'KL', 'KLn',\n                                                        'Erule', 'seq', 'random', \n                                                        'DPrule', 'TPrule', 'EPrule', 'WPrule')))\n                                stop('Selected criteria not valid for multidimensional tests')\n                            min_SEM <<- .3\n                            met_SEM <<- rep(FALSE, nfact)\n                            Wrule_weights <<- rep(1/nfact, nfact)\n                            min_items <<- 1L\n                            max_items <<- nitems\n                            stop_now <<- FALSE\n                            preCAT_nitems <<- 0L\n                            KL_delta <<- 0.1\n                            max_time <<- Inf\n                            if(length(design)){\n                                if(!is.null(design$max_time))\n                                    max_time <<- design$max_time\n                                if(!is.null(design$KL_delta))\n                                    KL_delta <<- design$KL_delta\n                                if(!is.null(design$Wrule_weights)) \n                                    Wrule_weights <<- design$Wrule_weights\n                                if(!is.null(design$min_SEM))\n                                    min_SEM <<- design$min_SEM\n                                if(!is.null(design$min_items))\n                                    min_items <<- as.integer(design$min_items)\n                                if(!is.null(design$max_items))\n                                    max_items <<- as.integer(design$max_items)\n                            }\n                            if(!mirt:::closeEnough(sum(Wrule_weights)-1, -1e-6, 1e-6))\n                                stop('Wrule_weights does not sum to 1')\n                            if(length(min_SEM) != 1L && length(min_SEM) != nfact)\n                                stop('min_SEM criteria is not a suitable length')\n                            if(length(preCAT)){\n                                if(is.null(preCAT$nitems))\n                                    stop('preCAT nitems must be specified')\n                                else preCAT_nitems <<- as.integer(preCAT$nitems)\n                                if(is.null(preCAT$method))\n                                    preCAT_method <<- 'MAP'\n                                else preCAT_method <<- preCAT$method\n                                if(is.null(preCAT$criteria))\n                                    preCAT_criteria <<- 'random'\n                                else preCAT_criteria <<- preCAT$criteria\n                                criteria <<- preCAT_criteria\n                                method <<- preCAT_method\n                            }\n                        })\n                    \n)\n\nDesign$methods(\n\n    # Check whether to stop adaptive test\n    Update.stop_now = function(){\n        nanswered <- sum(!is.na(MCE$person$responses))\n        if(MCE$person$score){\n            if(nanswered >= min_items){\n                diff <- MCE$person$thetas_SE_history[nrow(MCE$person$thetas_SE_history), ]\n                met_SEM <<- diff < min_SEM\n                if(all(met_SEM)) stop_now <<- TRUE\n            }\n        }\n        if(nanswered == max_items) stop_now <<- TRUE\n        if(max_time <= sum(MCE$person$item_time)) stop_now <<- TRUE\n    },\n    \n    Next.stage = function(item){\n        if(item == preCAT_nitems){\n            criteria <<- CAT_criteria\n            method <<- CAT_method\n        }\n    }\n)",
    "created" : 1407962861200.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2592464196",
    "id" : "2F0306CD",
    "lastKnownWriteTime" : 1407966748,
    "path" : "~/Desktop/Dropbox/Research-projects/mirtCAT/R/DesignClass.R",
    "project_path" : "R/DesignClass.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}