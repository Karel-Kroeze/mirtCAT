% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findNextCATItem.R
\name{findNextItem.lp}
\alias{findNextItem.lp}
\title{Find next CAT item with linear (or integer) solver}
\usage{
findNextItem.lp(x, objective, constr_fun, person = NULL, design = NULL,
  test = NULL, all_index = FALSE, ...)
}
\arguments{
\item{x}{an object of class 'mirtCAT_design' returned from the \code{\link{mirtCAT}} function
when passing \code{design_elements = TRUE}}

\item{objective}{a vector of values used as the optimization criteria to be passed to 
\code{lp(objective.in)}. This is typically the vector of criteria values returned from
\code{\link{findNextItem}} (with the \code{values = TRUE} input), however supplying other
criteria are possible (e.g., to minimize the number of items administered simply pass a vector
of -1's)}

\item{constr_fun}{a user-defined function of the form \code{function(person, test, design){...}} 
that returns a \code{data.frame} containing the left hand side, relationship, and right hand side
of the constraints. Each row corresponds to a constraint, while the number of columns should be 
equal to the number of items plus 2. 

For example, in a test with the constraint that exactly 10 items 
should be administered to all participants, the input should be defined as 
\preformatted{const_fun <- function(person, test, design){
   nitems <- extract.mirt(test@mo, 'nitems')
   data.frame(item=t(rep(1, nitems)), relation="==", value=10)
 }}
 Note that the column names of the returned \code{data.frame} object do not matter.}

\item{person}{(required when \code{x} is missing) internal person object. To be 
used when \code{customNextItem} function has been defined}

\item{design}{(required when \code{x} is missing) internal design object. To be 
used when \code{customNextItem} function has been defined}

\item{test}{(required when \code{x} is missing) internal test object. To be 
used when \code{customNextItem} function has been defined}

\item{all_index}{logical; return all the items which solve the optimization problem 
(in no particular order)?}

\item{...}{additional arguments to be passed to \code{\link{lp}}}
}
\value{
typically returns an integer value indicating the index of the next item to be selected or a
  value of \code{NA} to indicate that the test should be terminated. However, see the arguments for 
  further returned object descriptions
}
\description{
A function that returns the next item in the computerized adaptive test which is found via 
an integer solver through searching for a maximum. The raw input forms can be used
when a \code{customNextItem} function has been defined in \code{\link{mirtCAT}}. This function
can be used to for 'Optimal Test Assembly', as well as 'Shadow Testing' designs (van der Linden, 2005),
by using the \code{\link{lp}} function.
}
\examples{
\dontrun{

#-------------------------------------------------------------
# find maximum information subject to constraints
#  sum(xi) <= 5              ### 5 or fewer items
#  x1 + x2 <= 1              ### items 1 and 2 can't be together
#  x4 == 0                   ### item 4 not included

# MI criteria value associated with each respective item
objective <- findNextItem(CATdesign, values = TRUE)

# constraint function
const_fun <- function(person, test, design){

  # left hand side constrains 
  #    - 1 row per constraint, and ncol must equal number of items
  nitems <- extract.mirt(test@mo, 'nitems')
  lhs <- matrix(0, 3, nitems)
  lhs[1,] <- 1
  lhs[2,c(1,2)] <- 1
  lsh[3, 4] <- 1
  
  # relationship direction
  dirs <- c("<=", "<=", '==')
  
  #right hand side
  rhs <- c(5, 1, 0)

  #all together
  constraints <- data.frame(lhs, dirs, rhs)
  constraints
}


# most optimal item, given constraints
findNextItem.lp(CATdesign, objective, constr_fun)

# all the items which solve the problem
findNextItem.lp(CATdesign, objective, constr_fun, all_index = TRUE)

## within a customNextItem() definition the above code would look like
# customNextItem <- function(person, design, test){
#   objective <- findNextItem(person=person, design=design, test=test, 
#                             values=TRUE) 
#   item <- findNextItem.lp(person=person, design=design, test=test, 
#                           objective=objective, constr_fun=constr_fun)
#   item
# }

}
}
\author{
Phil Chalmers \email{rphilip.chalmers@gmail.com}
}
\references{
van der Linden, W. J. (2005). Linear models for optimal test design. Springer.
}
\seealso{
\code{\link{mirtCAT}}, \code{\link{findNextItem}}, 
  \code{\link{updateDesign}}, \code{\link{extract.mirtCAT}}
}

